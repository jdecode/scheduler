{
    "name": "laravel/laravel",
    "type": "project",
    "description": "The Laravel Framework.",
    "keywords": ["framework", "laravel"],
    "license": "MIT",
    "require": {
        "php": "^8.2",
        "ext-curl": "*",
        "ext-pdo": "*",
        "blade-ui-kit/blade-icons": "^1.3",
        "doctrine/dbal": "^3.3",
        "guzzlehttp/guzzle": "^7.2",
        "laravel/framework": "^10.0",
        "laravel/sanctum": "^3.0",
        "laravel/socialite": "^5.5",
        "laravel/telescope": "^4.9",
        "laravel/tinker": "^2.7",
        "mkocansey/bladewind": "^0.1.6"
    },
    "require-dev": {
        "barryvdh/laravel-ide-helper": "^2.13",
        "brainmaestro/composer-git-hooks": "dev-master",
        "enlightn/security-checker": "^1.10",
        "fakerphp/faker": "^1.9.1",
        "laravel/pint": "^1.9",
        "laravel/sail": "^1.0.1",
        "mockery/mockery": "^1.4.4",
        "nunomaduro/collision": "^7.5",
        "nunomaduro/larastan": "^2.6",
        "nunomaduro/phpinsights": "^2.8",
        "pestphp/pest": "^2.5",
        "pestphp/pest-plugin-laravel": "^2.0",
        "spatie/laravel-ignition": "^2.1"
    },
    "autoload": {
        "psr-4": {
            "App\\": "app/",
            "Database\\Factories\\": "database/factories/",
            "Database\\Seeders\\": "database/seeders/"
        }
    },
    "autoload-dev": {
        "psr-4": {
            "Tests\\": "tests/"
        }
    },
    "scripts": {
        "post-autoload-dump": [
            "Illuminate\\Foundation\\ComposerScripts::postAutoloadDump",
            "@php artisan package:discover --ansi"
        ],
        "post-update-cmd": [
            "@php artisan vendor:publish --tag=laravel-assets --ansi --force"
        ],
        "post-root-package-install": [
            "@php -r \"file_exists('.env') || copy('.env.example', '.env');\""
        ],
        "post-create-project-cmd": [
            "@php artisan key:generate --ansi"
        ],
        "cghooks": "[ -f vendor/bin/cghooks ] && vendor/bin/cghooks update || echo 'cghooks not found'",
        "ide-helper": [
            "@php artisan ide-helper:generate -n",
            "@php artisan ide-helper:meta -n",
            "@php artisan ide-helper:models -n"
        ],
        "parallel-lint": "vendor/bin/parallel-lint --exclude vendor . --colors",
        "pint": "vendor/bin/pint app",
        "security-checker": "vendor/bin/security-checker security:check",
        "pest": "vendor/bin/pest --color=always --stop-on-error --stop-on-failure --min=55",
        "routes": "@php artisan route:list --except-vendor",
        "larastan": "vendor/bin/phpstan analyze",
        "chmoder" : "mkdir -p public/build && chmod -R 777 storage bootstrap public/build && chown -R 1001:1001 \"/root\"",
        "clear": [
            "@php artisan config:clear",
            "@php artisan route:clear",
            "@php artisan view:clear",
            "@php artisan clear-compiled",
            "@chmoder"
        ],
        "cache-clear": [
            "@php artisan cache:clear"
        ],
        "dev": [
            "@php -r \"file_exists('.env') || copy('.env.example', '.env');\"",
            "@putenv CACHE_DRIVER=file",
            "@php artisan key:generate",
            "@php artisan migrate --seed",
            "@cghooks",
            "@ide-helper",
            "@ci"
        ],
        "ci": [
            "@chmoder",
            "npm run heroku-prebuild",
            "npm run heroku-postbuild"
        ],
        "pre-commit": [
            "@pint",
            "@parallel-lint",
            "@security-checker"
        ],
        "pre-push": [
            "@pest"
        ],
        "tests": [
            "@pre-commit",
            "@pre-push"
        ],
        "post-merge": [
            "@php artisan migrate",
            "composer install",
            "echo \"\nSeed, if in need: \\e[32mphp artisan db:seed\\e[0m\"\n"
        ]
    },
    "extra": {
        "laravel": {
            "dont-discover": []
        },
        "hooks": {
            "config": {
                "stop-on-failure": [
                    "pre-commit",
                    "pre-push"
                ]
            },
            "pre-commit": [
                "docker-compose exec -T scheduler-0x composer run pre-commit"
            ],
            "pre-push": [
                "docker-compose exec -T scheduler-0x composer run pre-push"
            ],
            "post-merge": [
                "docker-compose exec -T scheduler-0x composer run post-merge"
            ]
        }
    },
    "config": {
        "optimize-autoloader": true,
        "preferred-install": "dist",
        "sort-packages": true,
        "allow-plugins": {
            "pestphp/pest-plugin": true,
            "dealerdirect/phpcodesniffer-composer-installer": true
        }
    },
    "minimum-stability": "dev",
    "prefer-stable": true
}
